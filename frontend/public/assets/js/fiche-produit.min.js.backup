const API_URL = "http://localhost:3000/api";
async function chargerDonneesProduit() {
  const nomProduit = window.location.pathname
    .split("/")
    .pop()
    .replace(".html", "");
  try {
    const response = await fetch(`${API_URL}/produits`);
    const data = await response.json();
    if (data.success && data.data) {
      const produit = data.data.find(
        (p) => p.nom && p.nom.toLowerCase() === nomProduit.toLowerCase()
      );
      if (produit) {
        afficherDonneesProduit(produit);
      } else {
        console.warn(`‚ö†Ô∏è Produit "${nomProduit}" non trouv√© dans la base`);
        afficherErreurProduit(`Produit "${nomProduit}" non trouv√©`);
      }
    } else {
      console.error("‚ùå Erreur API:", data.message);
      afficherErreurProduit("Erreur de chargement des donn√©es");
    }
  } catch (error) {
    console.error("‚ùå Erreur connexion:", error);
    afficherErreurProduit("Erreur de connexion √† la base de donn√©es");
  }
}
function afficherDonneesProduit(produit) {
  if (produit.top_du_mois) {
    const badge = document.getElementById("badge-top-mois");
    if (badge) {
      badge.innerHTML = `\n                <div style="background: linear-gradient(45deg, #ffd700, #ffed4e); \n                            padding: 10px; margin-bottom: 20px; text-align: center; \n                            border-radius: 8px; font-weight: bold;">\n                    ‚≠ê Ce produit est en vedette ce mois-ci !\n                </div>\n            `;
    }
  }
  const description = document.querySelector(".description");
  if (description && produit.description) {
    description.textContent = produit.description;
  }
  const img = document.querySelector(".gallery img");
  if (img && produit.image) {
    img.src = `/assets/images/${produit.image}`;
    img.onerror = () => (img.src = "/assets/images/placeholder.png");
    console.log("üñºÔ∏è Image affich√©e :", img.src);
  }
  const contentDiv = document.getElementById("product-content");
  if (contentDiv && produit.donnees_fiche && produit.donnees_fiche.length > 0) {
    let html = "";
    produit.donnees_fiche.forEach((contenu, index) => {
      if (contenu && contenu.trim().length > 0) {
        let titre, texte;
        const contenuNettoye = contenu.replace(/\\n/g, "\n");
        if (contenuNettoye.includes("\n")) {
          const parties = contenuNettoye.split("\n");
          titre = parties[0];
          texte = parties.slice(1).join("\n").trim();
        } else {
          titre = "üìù Description";
          texte = contenu.trim();
        }
        if (texte.length > 0) {
          html += `\n                <div style="margin: 20px 0; text-align: center;">\n                    <h3 style="color: white; margin-bottom: 10px; font-weight: bold;">${titre}</h3>\n                    <p>${texte.replace(
            /\n/g,
            "<br>"
          )}</p>\n                </div>\n            `;
        } else {
        }
      }
    });
    contentDiv.innerHTML = html || "<p>Informations d√©taill√©es √† venir...</p>";
  }
  if (produit.prix && !produit.donnees_fiche?.some((d) => d.includes("‚Ç¨"))) {
    const contentDiv = document.getElementById("product-content");
    if (contentDiv) {
      contentDiv.innerHTML =
        `<p><strong>üí∞ Prix :</strong> ${produit.prix}</p>` +
        contentDiv.innerHTML;
    }
  }
}
function getSectionsParCategorie(categorie) {
  const sectionsBase = [
    { index: 0, titre: "Description" },
    { index: 1, titre: "Prix" },
    { index: 2, titre: "Sp√©cifications" },
  ];
  const sectionsSpecifiques = {
    CONSOLE: [
      { index: 3, titre: "√âcran et affichage" },
      { index: 4, titre: "Contr√¥leurs" },
    ],
    TABLETTE: [
      { index: 3, titre: "√âcran et affichage" },
      { index: 4, titre: "Accessoires" },
    ],
    DRONE: [{ index: 3, titre: "Fonctions vid√©o" }],
    SMARTPHONE: [{ index: 3, titre: "Appareil photo" }],
    "PC GAMING": [{ index: 3, titre: "Fonctions gaming" }],
    "CASQUE AUDIO": [{ index: 3, titre: "Fonctions audio" }],
  };
  const sections = [...sectionsBase];
  if (sectionsSpecifiques[categorie]) {
    sections.push(...sectionsSpecifiques[categorie]);
  }
  sections.push(
    { index: sections.length, titre: "Connectivit√©" },
    { index: sections.length + 1, titre: "Exp√©rience utilisateur" }
  );
  return sections;
}
function afficherErreurProduit(message) {
  const contentDiv = document.getElementById("product-content");
  if (contentDiv) {
    contentDiv.innerHTML = `\n            <div style="text-align: center; padding: 20px; color: #666;">\n                <p>‚ùå ${message}</p>\n                <p>V√©rifiez que :</p>\n                <ul style="text-align: left; margin: 10px 0;">\n                    <li>Le serveur Node.js est lanc√© (node server.js)</li>\n                    <li>PostgreSQL est d√©marr√©</li>\n                    <li>Le produit existe dans la base de donn√©es</li>\n                </ul>\n            </div>\n        `;
  }
}
document.addEventListener("DOMContentLoaded", chargerDonneesProduit);
